:py:mod:`neurorosettes.neurons`
===============================

.. py:module:: neurorosettes.neurons

.. autoapi-nested-parse::

   This module deals with the neuron structure and functions



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   neurorosettes.neurons.Neuron




.. py:class:: Neuron(position: numpy.ndarray, factory: neurorosettes.subcellular.ObjectFactory, outgrowth_axis: numpy.ndarray = np.array([1.0, 0.0, 0.0]), differentiation_grade: int = 0)

   Represents a neuron that has a cell and neurites

   .. py:method:: cell_radius(self)
      :property:


   .. py:method:: ready_for_division(self)
      :property:


   .. py:method:: ready_for_differentiation(self)
      :property:


   .. py:method:: ready_to_die(self)
      :property:


   .. py:method:: set_outgrowth_axis(self, coordinates: numpy.ndarray) -> None

      Sets the axis that neurites will follow when new neurites are created


   .. py:method:: set_clocks_from_mother(self, mother_neuron: Neuron)


   .. py:method:: get_neurite_position_on_cell_surface(self) -> numpy.ndarray

      Returns the coordinates on the cell surface where the first neurite should be placed


   .. py:method:: place_neurite_on_cell_surface(self, neurite: neurorosettes.subcellular.Neurite) -> None

      Places the neurite base on the cell surface according to the cell-distal vector


   .. py:method:: create_first_neurite(self, factory: neurorosettes.subcellular.ObjectFactory) -> None

      Creates a neurite attached to the soma cell


   .. py:method:: create_secondary_neurite(self, factory: neurorosettes.subcellular.ObjectFactory) -> None

      Creates a neurite attached to the most recent neurite



